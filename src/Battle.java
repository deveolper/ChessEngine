public class Battle {
    public static void main(String[] args) {
        NeuralNetwork network1 = new NeuralNetwork(new Layer[]{
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.4,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,0.2,0.1,0.0,0.0,0.4,1.0,0.3,0.5,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.2,0.0,0.2,0.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,0.3,0.0,0.2,0.3,0.0,0.2,0.5,1.0,0.0,6.0,3.0,0.2,0.0,0.2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.1,0.4,0.1,0.0,0.8,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,2.1,0.0,0.0,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.4,0.0,0.0,0.0,0.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0})
                }),
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0, 0.3, 0.2, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.4, 0.1, 0.1}),
                        new Node(0.0, new double[]{0.0, 1.2, 0.0, 0.2}),
                        new Node(0.0, new double[]{0.5, 0.0, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.5, 0.4}),
                        new Node(0.0, new double[]{0.6, 1.3, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.0, 0.0})
                }),
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0, 0.1, 0.2, 0.3, 0.0, 0.0, 0.0, 0.0})
                })
        });
        NeuralNetwork network2 = new NeuralNetwork(new Layer[]{
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.4,0.1,0.0,0.0,0.0,0.0,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.6,0.7,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,0.2,0.1,0.0,0.0,0.4,1.0,0.3,0.5,0.0,1.0,0.0,0.0,1.0,0.0,0.2,0.0,0.1,0.0,0.0,0.0,0.5,0.0,0.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.2,0.0,0.2,0.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,0.3,0.0,0.2,0.3,0.0,0.2,0.5,1.0,0.0,6.0,3.0,0.2,0.0,0.2,0.0,0.3,0.0,0.2,0.0,0.4,0.0,0.0,0.0,0.0,0.4,0.3,0.6,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.1,0.4,0.1,0.0,0.8,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}),
                        new Node(0.0, new double[]{0.0,2.1,0.0,0.0,0.0,0.1,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.4,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.4,0.0,0.0,0.0,0.0,0.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0})
                }),
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0, 0.3, 0.2, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.4, 0.1, 0.1}),
                        new Node(0.0, new double[]{0.0, 1.2, 0.0, 0.2}),
                        new Node(0.0, new double[]{0.5, 0.0, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.5, 0.4}),
                        new Node(0.0, new double[]{0.6, 1.3, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.0, 0.0}),
                        new Node(0.0, new double[]{0.0, 0.0, 0.0, 0.0})
                }),
                new Layer(new Node[]{
                        new Node(0.0, new double[]{0.0, 0.1, 0.2, 0.3, 0.0, 0.0, 0.0, 0.0})
                })
        });

        Chess engineWhite = new Chess(Chess.START_POSITION, network2);
        Chess engineBlack = new Chess(Chess.START_POSITION, network1);

        MoveEvalPair move;
        while (engineWhite.inProgress()) {
            move = engineWhite.bestMove(1);
            engineWhite.makeMove(move.move);
            engineBlack.makeMove(move.move);
            move = engineBlack.bestMove(1);
            engineWhite.makeMove(move.move);
            engineBlack.makeMove(move.move);
        }

        System.out.println(engineWhite);
    }
}
